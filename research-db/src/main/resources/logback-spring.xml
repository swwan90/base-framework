<?xml version="1.0" encoding="UTF-8"?>
<!-- scan属性为true时，如果配置文档发生改变将会进行重新加载 -->
<!-- scanPeriod属性设置监测配置文件修改的时间间隔，默认单位为毫秒，在scan为true时才生效 -->
<!-- debug属性如果为true时，会打印出logback内部的日志信息 -->
<configuration scan="true" scanPeriod="30 seconds" debug="false">
    <!-- 定义参数常量 -->
    <!-- 日志级别：TRACE<DEBUG<INFO<WARN<ERROR，其中常用的是DEBUG、INFO和ERROR -->
    <springProperty scope="context" name="log.level" source="log.level" defaultValue="info"/>
    <!-- 文件保留时间 -->
    <springProperty scope="context" name="log.maxHistory" source="log.maxHistory" defaultValue="30"/>
    <!-- 日志存储路径 -->
    <springProperty scope="context" name="log.path" source="log.path" defaultValue="/logs/research"/>
    <!-- 日志显示格式 -->
    <springProperty scope="context" name="log.pattern" source="log.pattern"
                    defaultValue="[%-5level] %d{HH:mm:ss.SSS} [%thread] [%X{traceId}] %logger{60} - %msg%n"/>

    <!-- 参数设置 -->
    <!-- 用于说明输出介质，此处说明控制台输出 -->
    <!-- ch.qos.logback.core.ConsoleAppender 控制台输出 -->
    <appender name="consoleAppender"
              class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
    </appender>

    <!-- 文件随着时间的推移按时间生成日志文件 -->
    <!-- ch.qos.logback.core.rolling.RollingFileAppender 文件日志输出 -->
    <appender name="fileAppender"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 文件路径 -->
        <file>${log.path}/daily/daily.log</file>
        <append>true</append>
        <!-- 过滤器，过滤掉不是指定日志水平的日志 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- 设置日志级别 -->
            <level>${log.level}</level>
            <!-- 如果跟该日志水平相匹配，则接受 -->
            <!-- <onMatch>ACCEPT</onMatch>-->
            <!-- 如果跟该日志水平不匹配，则过滤掉 -->
            <!-- <onMismatch>DENY</onMismatch>-->
        </filter>
        <!-- 滚动策略 -->
        <rollingPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <FileNamePattern>${log.path}/daily/%d{yyyy-MM-dd}/daily-%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <MaxHistory>10</MaxHistory>
            <maxFileSize>100MB</maxFileSize>
            <!-- 该属性在 1.1.6版本后 才开始支持-->
            <totalSizeCap>1GB</totalSizeCap>
            <!-- 设置最大保存周期 -->
            <MaxHistory>${log.maxHistory}</MaxHistory>
        </rollingPolicy>
        <encoder>
            <charset>utf-8</charset>
            <pattern>${log.pattern}</pattern>
        </encoder>
    </appender>
    <appender name="errorAppender"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${log.path}/error/error.log</File>
        <append>true</append>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${log.path}/error.%i.log.zip</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>3</maxIndex>
        </rollingPolicy>
        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>100MB</maxFileSize>
        </triggeringPolicy>
        <encoder>
            <charset>utf-8</charset>
            <pattern>${log.pattern}</pattern>
        </encoder>
    </appender>

    <!-- 用于存放日志对象，同时指定关联的package位置 -->
    <!-- name指定关联的package -->
    <!-- level表明指记录哪个日志级别以上的日志 -->
    <!-- appender-ref指定logger向哪个文件输出日志信息 -->
    <!-- additivity为true时，logger会把根logger的日志输出地址加入进来，但logger水平不依赖于根logger -->
    <!--精确设置每个包下面的日志-->
    <logger name="com.sun" level="INFO"/>
    <logger name="net.sf.ehcache" level="INFO"/>
    <logger name="org.apache.shiro" level="INFO"/>
    <logger name="org.hibernate" level="INFO"/>
    <logger name="org.springframework" level="INFO"/>
    <logger name="org.eclipse" level="INFO"/>
    <logger name="org.apache.http" level="INFO"/>
    <logger name="org.thymeleaf" level="INFO"/>
    <logger name="org.apache.activemq" level="INFO"/>
    <logger name="org.activiti.engine.impl.persistence.entity" level="INFO"/>
    <logger name="org.springframework.web" level="INFO"/>
    <logger name="com.ibatis.common.jdbc.SimpleDataSource" level="INFO"/>
    <logger name="com.ibatis.common.jdbc.ScriptRunner" level="INFO"/>
    <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="INFO"/>
    <logger name="com.netflix.discovery" level="INFO"/>
    <logger name="java.sql.Connection" level="INFO"/>
    <logger name="java.sql.Statement" level="INFO"/>
    <logger name="java.sql.PreparedStatement" level="INFO"/>
    <logger name="com.bjsxt" level="${log.level}"/>

    <!-- 特殊的logger，根logger -->
    <!-- 日志级别 -->
    <root level="${log.level}">
        <appender-ref ref="fileAppender"/>
        <appender-ref ref="errorAppender"/>
        <appender-ref ref="consoleAppender"/>
    </root>
</configuration>